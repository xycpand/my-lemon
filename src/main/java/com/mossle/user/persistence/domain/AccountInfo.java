package com.mossle.user.persistence.domain;

// Generated by Hibernate Tools
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * AccountInfo .
 * 
 * @author Lingo
 */
@Entity
@Table(name = "ACCOUNT_INFO")
public class AccountInfo implements java.io.Serializable {
    private static final long serialVersionUID = 0L;

    /** null. */
    private Long id;

    /** null. */
    private String code;

    /** null. */
    private String username;

    /** null. */
    private String type;

    /** null. */
    private String displayName;

    /** null. */
    private String status;

    /** null. */
    private String passwordRequired;

    /** null. */
    private String locked;

    /** null. */
    private Date createTime;

    /** null. */
    private Date closeTime;

    /** null. */
    private Date loginTime;

    /** null. */
    private String nickName;

    /** null. */
    private String description;

    /** null. */
    private String language;

    /** null. */
    private String timezone;

    /** null. */
    private String tenantId;

    /** . */
    private Set<AccountCredential> accountCredentials = new HashSet<AccountCredential>(
            0);

    /** . */
    private Set<AccountAvatar> accountAvatars = new HashSet<AccountAvatar>(0);

    public AccountInfo() {
    }

    public AccountInfo(String code, String username, String type,
            String displayName, String status, String passwordRequired,
            String locked, Date createTime, Date closeTime, Date loginTime,
            String nickName, String description, String language,
            String timezone, String tenantId,
            Set<AccountCredential> accountCredentials,
            Set<AccountAvatar> accountAvatars) {
        this.code = code;
        this.username = username;
        this.type = type;
        this.displayName = displayName;
        this.status = status;
        this.passwordRequired = passwordRequired;
        this.locked = locked;
        this.createTime = createTime;
        this.closeTime = closeTime;
        this.loginTime = loginTime;
        this.nickName = nickName;
        this.description = description;
        this.language = language;
        this.timezone = timezone;
        this.tenantId = tenantId;
        this.accountCredentials = accountCredentials;
        this.accountAvatars = accountAvatars;
    }

    /** @return null. */
    @Id
    @GeneratedValue
    @Column(name = "ID", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    /**
     * @param id
     *            null.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /** @return null. */
    @Column(name = "CODE", length = 50)
    public String getCode() {
        return this.code;
    }

    /**
     * @param code
     *            null.
     */
    public void setCode(String code) {
        this.code = code;
    }

    /** @return null. */
    @Column(name = "USERNAME", length = 50)
    public String getUsername() {
        return this.username;
    }

    /**
     * @param username
     *            null.
     */
    public void setUsername(String username) {
        this.username = username;
    }

    /** @return null. */
    @Column(name = "TYPE", length = 50)
    public String getType() {
        return this.type;
    }

    /**
     * @param type
     *            null.
     */
    public void setType(String type) {
        this.type = type;
    }

    /** @return null. */
    @Column(name = "DISPLAY_NAME", length = 200)
    public String getDisplayName() {
        return this.displayName;
    }

    /**
     * @param displayName
     *            null.
     */
    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    /** @return null. */
    @Column(name = "STATUS", length = 50)
    public String getStatus() {
        return this.status;
    }

    /**
     * @param status
     *            null.
     */
    public void setStatus(String status) {
        this.status = status;
    }

    /** @return null. */
    @Column(name = "PASSWORD_REQUIRED", length = 50)
    public String getPasswordRequired() {
        return this.passwordRequired;
    }

    /**
     * @param passwordRequired
     *            null.
     */
    public void setPasswordRequired(String passwordRequired) {
        this.passwordRequired = passwordRequired;
    }

    /** @return null. */
    @Column(name = "LOCKED", length = 50)
    public String getLocked() {
        return this.locked;
    }

    /**
     * @param locked
     *            null.
     */
    public void setLocked(String locked) {
        this.locked = locked;
    }

    /** @return null. */
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATE_TIME", length = 26)
    public Date getCreateTime() {
        return this.createTime;
    }

    /**
     * @param createTime
     *            null.
     */
    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    /** @return null. */
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CLOSE_TIME", length = 26)
    public Date getCloseTime() {
        return this.closeTime;
    }

    /**
     * @param closeTime
     *            null.
     */
    public void setCloseTime(Date closeTime) {
        this.closeTime = closeTime;
    }

    /** @return null. */
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "LOGIN_TIME", length = 26)
    public Date getLoginTime() {
        return this.loginTime;
    }

    /**
     * @param loginTime
     *            null.
     */
    public void setLoginTime(Date loginTime) {
        this.loginTime = loginTime;
    }

    /** @return null. */
    @Column(name = "NICK_NAME", length = 200)
    public String getNickName() {
        return this.nickName;
    }

    /**
     * @param nickName
     *            null.
     */
    public void setNickName(String nickName) {
        this.nickName = nickName;
    }

    /** @return null. */
    @Column(name = "DESCRIPTION", length = 200)
    public String getDescription() {
        return this.description;
    }

    /**
     * @param description
     *            null.
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /** @return null. */
    @Column(name = "LANGUAGE", length = 50)
    public String getLanguage() {
        return this.language;
    }

    /**
     * @param language
     *            null.
     */
    public void setLanguage(String language) {
        this.language = language;
    }

    /** @return null. */
    @Column(name = "TIMEZONE", length = 50)
    public String getTimezone() {
        return this.timezone;
    }

    /**
     * @param timezone
     *            null.
     */
    public void setTimezone(String timezone) {
        this.timezone = timezone;
    }

    /** @return null. */
    @Column(name = "TENANT_ID", length = 64)
    public String getTenantId() {
        return this.tenantId;
    }

    /**
     * @param tenantId
     *            null.
     */
    public void setTenantId(String tenantId) {
        this.tenantId = tenantId;
    }

    /** @return . */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "accountInfo")
    public Set<AccountCredential> getAccountCredentials() {
        return this.accountCredentials;
    }

    /**
     * @param accountCredentials
     *            .
     */
    public void setAccountCredentials(Set<AccountCredential> accountCredentials) {
        this.accountCredentials = accountCredentials;
    }

    /** @return . */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "accountInfo")
    public Set<AccountAvatar> getAccountAvatars() {
        return this.accountAvatars;
    }

    /**
     * @param accountAvatars
     *            .
     */
    public void setAccountAvatars(Set<AccountAvatar> accountAvatars) {
        this.accountAvatars = accountAvatars;
    }
}
